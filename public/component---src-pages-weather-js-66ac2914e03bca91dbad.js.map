{"version":3,"file":"component---src-pages-weather-js-66ac2914e03bca91dbad.js","mappings":"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","sources":["webpack://dangepia-village-website/./src/pages/weather.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport Layout from \"../components/Layout\"\n\nconst WeatherPage = () => {\n  const [currentWeather, setCurrentWeather] = useState({\n    temperature: 22,\n    condition: \"Partly Cloudy\",\n    humidity: 65,\n    windSpeed: 12,\n    pressure: 1013,\n    visibility: 10,\n    uvIndex: 5,\n    icon: \"⛅\"\n  })\n\n  const [forecast, setForecast] = useState([\n    { day: \"Today\", high: 24, low: 18, condition: \"Partly Cloudy\", icon: \"⛅\" },\n    { day: \"Tomorrow\", high: 26, low: 19, condition: \"Sunny\", icon: \"☀️\" },\n    { day: \"Wednesday\", high: 23, low: 17, condition: \"Cloudy\", icon: \"☁️\" },\n    { day: \"Thursday\", high: 21, low: 15, condition: \"Rain\", icon: \"🌧️\" },\n    { day: \"Friday\", high: 25, low: 18, condition: \"Sunny\", icon: \"☀️\" },\n    { day: \"Saturday\", high: 27, low: 20, condition: \"Sunny\", icon: \"☀️\" },\n    { day: \"Sunday\", high: 24, low: 17, condition: \"Partly Cloudy\", icon: \"⛅\" }\n  ])\n\n  const [alerts, setAlerts] = useState([\n    {\n      type: \"advisory\",\n      title: \"High UV Index Expected\",\n      message: \"UV index will reach 8 tomorrow. Please take sun protection measures.\",\n      icon: \"☀️\"\n    }\n  ])\n\n  // In a real app, this would fetch data from a weather API\n  useEffect(() => {\n    // Simulate API call\n    const fetchWeatherData = () => {\n      // This would be replaced with actual API calls\n      console.log(\"Fetching weather data...\")\n    }\n    \n    fetchWeatherData()\n    \n    // Set up periodic updates\n    const interval = setInterval(fetchWeatherData, 300000) // Update every 5 minutes\n    \n    return () => clearInterval(interval)\n  }, [])\n\n  const getBackgroundGradient = (condition) => {\n    switch (condition.toLowerCase()) {\n      case \"sunny\":\n        return \"linear-gradient(135deg, #74b9ff 0%, #0984e3 100%)\"\n      case \"cloudy\":\n        return \"linear-gradient(135deg, #636e72 0%, #2d3436 100%)\"\n      case \"rain\":\n        return \"linear-gradient(135deg, #636e72 0%, #2d3436 100%)\"\n      default:\n        return \"linear-gradient(135deg, #74b9ff 0%, #0984e3 100%)\"\n    }\n  }\n\n  const getUVIndexColor = (uvIndex) => {\n    if (uvIndex <= 2) return \"#22c55e\" // Green - Low\n    if (uvIndex <= 5) return \"#eab308\" // Yellow - Moderate\n    if (uvIndex <= 7) return \"#f97316\" // Orange - High\n    if (uvIndex <= 10) return \"#dc2626\" // Red - Very High\n    return \"#7c3aed\" // Purple - Extreme\n  }\n\n  const getUVIndexLabel = (uvIndex) => {\n    if (uvIndex <= 2) return \"Low\"\n    if (uvIndex <= 5) return \"Moderate\"\n    if (uvIndex <= 7) return \"High\"\n    if (uvIndex <= 10) return \"Very High\"\n    return \"Extreme\"\n  }\n\n  return (\n    <Layout title=\"Weather\" description=\"Current weather conditions and forecast for Dangepia Village\">\n      <div style={{ maxWidth: 1200, margin: `0 auto`, padding: `2rem 1rem` }}>\n        <h1>Dangepia Village Weather</h1>\n        <p style={{ fontSize: `1.1rem`, marginBottom: `3rem` }}>\n          Stay informed about current weather conditions and upcoming forecasts for our village.\n          Updated every 5 minutes from local weather stations.\n        </p>\n\n        {/* Weather Alerts */}\n        {alerts.length > 0 && (\n          <section style={{ marginBottom: `2rem` }}>\n            {alerts.map((alert, index) => (\n              <div key={index} style={{\n                background: alert.type === \"warning\" ? \"#fed7d7\" : \"#bee3f8\",\n                border: `1px solid ${alert.type === \"warning\" ? \"#feb2b2\" : \"#90cdf4\"}`,\n                borderRadius: `8px`,\n                padding: `1rem`,\n                marginBottom: `1rem`,\n              }}>\n                <div style={{ display: `flex`, alignItems: `center`, gap: `0.5rem` }}>\n                  <span style={{ fontSize: `1.2rem` }}>{alert.icon}</span>\n                  <strong style={{ \n                    color: alert.type === \"warning\" ? \"#c53030\" : \"#2b6cb0\" \n                  }}>\n                    {alert.title}\n                  </strong>\n                </div>\n                <p style={{ \n                  margin: `0.5rem 0 0 0`,\n                  color: alert.type === \"warning\" ? \"#744210\" : \"#2c5282\"\n                }}>\n                  {alert.message}\n                </p>\n              </div>\n            ))}\n          </section>\n        )}\n\n        {/* Current Weather */}\n        <section style={{\n          background: getBackgroundGradient(currentWeather.condition),\n          color: `white`,\n          borderRadius: `12px`,\n          padding: `2rem`,\n          marginBottom: `3rem`,\n          boxShadow: `0 8px 32px rgba(0,0,0,0.1)`,\n        }}>\n          <div style={{\n            display: `grid`,\n            gridTemplateColumns: `1fr auto`,\n            gap: `2rem`,\n            alignItems: `center`,\n          }}>\n            <div>\n              <h2 style={{ margin: `0 0 0.5rem 0`, fontSize: `2rem` }}>\n                Current Weather\n              </h2>\n              <p style={{ margin: `0 0 1rem 0`, opacity: 0.9 }}>\n                Last updated: {new Date().toLocaleTimeString()}\n              </p>\n              <div style={{\n                display: `flex`,\n                alignItems: `center`,\n                gap: `1rem`,\n                marginBottom: `1rem`,\n              }}>\n                <span style={{ fontSize: `4rem` }}>{currentWeather.icon}</span>\n                <div>\n                  <div style={{ fontSize: `3rem`, fontWeight: `bold` }}>\n                    {currentWeather.temperature}°C\n                  </div>\n                  <div style={{ fontSize: `1.2rem`, opacity: 0.9 }}>\n                    {currentWeather.condition}\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div style={{\n              display: `grid`,\n              gridTemplateColumns: `repeat(2, 1fr)`,\n              gap: `1rem`,\n              minWidth: `300px`,\n            }}>\n              <div style={{\n                background: `rgba(255,255,255,0.2)`,\n                padding: `1rem`,\n                borderRadius: `8px`,\n                textAlign: `center`,\n              }}>\n                <div style={{ fontSize: `0.9rem`, opacity: 0.8 }}>Humidity</div>\n                <div style={{ fontSize: `1.5rem`, fontWeight: `bold` }}>\n                  {currentWeather.humidity}%\n                </div>\n              </div>\n              \n              <div style={{\n                background: `rgba(255,255,255,0.2)`,\n                padding: `1rem`,\n                borderRadius: `8px`,\n                textAlign: `center`,\n              }}>\n                <div style={{ fontSize: `0.9rem`, opacity: 0.8 }}>Wind Speed</div>\n                <div style={{ fontSize: `1.5rem`, fontWeight: `bold` }}>\n                  {currentWeather.windSpeed} km/h\n                </div>\n              </div>\n              \n              <div style={{\n                background: `rgba(255,255,255,0.2)`,\n                padding: `1rem`,\n                borderRadius: `8px`,\n                textAlign: `center`,\n              }}>\n                <div style={{ fontSize: `0.9rem`, opacity: 0.8 }}>Pressure</div>\n                <div style={{ fontSize: `1.5rem`, fontWeight: `bold` }}>\n                  {currentWeather.pressure} hPa\n                </div>\n              </div>\n              \n              <div style={{\n                background: `rgba(255,255,255,0.2)`,\n                padding: `1rem`,\n                borderRadius: `8px`,\n                textAlign: `center`,\n              }}>\n                <div style={{ fontSize: `0.9rem`, opacity: 0.8 }}>UV Index</div>\n                <div style={{ \n                  fontSize: `1.5rem`, \n                  fontWeight: `bold`,\n                  color: getUVIndexColor(currentWeather.uvIndex),\n                }}>\n                  {currentWeather.uvIndex} - {getUVIndexLabel(currentWeather.uvIndex)}\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* 7-Day Forecast */}\n        <section style={{ marginBottom: `3rem` }}>\n          <h2 style={{ marginBottom: `1.5rem` }}>7-Day Forecast</h2>\n          <div style={{\n            display: `grid`,\n            gridTemplateColumns: `repeat(auto-fit, minmax(150px, 1fr))`,\n            gap: `1rem`,\n          }}>\n            {forecast.map((day, index) => (\n              <div key={index} style={{\n                background: `white`,\n                border: `1px solid #e2e8f0`,\n                borderRadius: `8px`,\n                padding: `1.5rem`,\n                textAlign: `center`,\n                boxShadow: `0 2px 4px rgba(0,0,0,0.1)`,\n                transition: `transform 0.2s, box-shadow 0.2s`,\n              }}\n              onMouseOver={(e) => {\n                e.currentTarget.style.transform = 'translateY(-5px)'\n                e.currentTarget.style.boxShadow = '0 8px 25px rgba(0,0,0,0.15)'\n              }}\n              onMouseOut={(e) => {\n                e.currentTarget.style.transform = 'translateY(0)'\n                e.currentTarget.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)'\n              }}\n              >\n                <div style={{ \n                  fontWeight: `bold`,\n                  marginBottom: `0.5rem`,\n                  color: index === 0 ? \"#667eea\" : \"#2d3748\",\n                }}>\n                  {day.day}\n                </div>\n                <div style={{ \n                  fontSize: `2rem`,\n                  marginBottom: `0.5rem`,\n                }}>\n                  {day.icon}\n                </div>\n                <div style={{ \n                  fontSize: `0.9rem`,\n                  marginBottom: `0.5rem`,\n                  color: `#4a5568`,\n                }}>\n                  {day.condition}\n                </div>\n                <div style={{ display: `flex`, justifyContent: `space-between` }}>\n                  <span style={{ fontWeight: `bold` }}>{day.high}°</span>\n                  <span style={{ color: `#666` }}>{day.low}°</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </section>\n\n        {/* Weather Information */}\n        <div style={{\n          display: `grid`,\n          gridTemplateColumns: `repeat(auto-fit, minmax(300px, 1fr))`,\n          gap: `2rem`,\n        }}>\n          {/* Climate Information */}\n          <section style={{\n            background: `#f7fafc`,\n            padding: `2rem`,\n            borderRadius: `8px`,\n            border: `1px solid #e2e8f0`,\n          }}>\n            <h3>Climate Information</h3>\n            <div style={{ marginTop: `1rem` }}>\n              <h4>Seasonal Overview</h4>\n              <ul style={{ color: `#4a5568`, lineHeight: `1.6` }}>\n                <li><strong>Spring:</strong> Mild temperatures, occasional rain</li>\n                <li><strong>Summer:</strong> Warm and dry, temperatures 25-35°C</li>\n                <li><strong>Autumn:</strong> Cool and pleasant, 15-25°C</li>\n                <li><strong>Winter:</strong> Cold with occasional snow, 0-15°C</li>\n              </ul>\n            </div>\n          </section>\n\n          {/* Weather Tips */}\n          <section style={{\n            background: `#f7fafc`,\n            padding: `2rem`,\n            borderRadius: `8px`,\n            border: `1px solid #e2e8f0`,\n          }}>\n            <h3>Weather Tips</h3>\n            <div style={{ marginTop: `1rem` }}>\n              <h4>Stay Prepared</h4>\n              <ul style={{ color: `#4a5568`, lineHeight: `1.6` }}>\n                <li>Check weather forecast before outdoor activities</li>\n                <li>Carry umbrella during rainy season</li>\n                <li>Use sun protection during high UV days</li>\n                <li>Dress in layers during temperature changes</li>\n                <li>Stay hydrated, especially during summer</li>\n              </ul>\n            </div>\n          </section>\n        </div>\n\n        {/* Data Sources */}\n        <section style={{\n          background: `white`,\n          padding: `1.5rem`,\n          borderRadius: `8px`,\n          border: `1px solid #e2e8f0`,\n          marginTop: `2rem`,\n          textAlign: `center`,\n        }}>\n          <p style={{ \n            margin: 0,\n            color: `#666`,\n            fontSize: `0.9rem`,\n          }}>\n            Weather data provided by local meteorological stations and updated every 5 minutes. \n            For emergency weather warnings, please monitor local news and official channels.\n          </p>\n        </section>\n      </div>\n    </Layout>\n  )\n}\n\nexport default WeatherPage\n"],"names":["WeatherPage","currentWeather","setCurrentWeather","useState","temperature","condition","humidity","windSpeed","pressure","visibility","uvIndex","icon","forecast","setForecast","day","high","low","alerts","setAlerts","type","title","message","useEffect","fetchWeatherData","console","log","interval","setInterval","clearInterval","React","Layout","description","style","maxWidth","margin","padding","fontSize","marginBottom","length","map","alert","index","key","background","border","borderRadius","display","alignItems","gap","color","toLowerCase","getBackgroundGradient","boxShadow","gridTemplateColumns","opacity","Date","toLocaleTimeString","fontWeight","minWidth","textAlign","getUVIndexLabel","transition","onMouseOver","e","currentTarget","transform","onMouseOut","justifyContent","marginTop","lineHeight"],"sourceRoot":""}